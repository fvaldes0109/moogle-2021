@page "/"

<PageTitle>Moogle!</PageTitle>

<h1>🔍 Moogle!</h1>

<input class="p-1 my-4" @bind="query" placeholder="Introduzca su búsqueda">

<button type="default" class="btn btn-primary" @onclick="RunQuery">🔍 Buscar</button>

@if (!string.IsNullOrEmpty(result.Suggestion) && result.Suggestion != "@null") {
    <div class="suggestion">
        <p>¿Quisiste decir <strong><a href="#" @onclick="SearchSuggestion">@result.Suggestion</a></strong>?</p>
    </div>
}

@if (result.Count == 0 && result.Suggestion != "") {
    <p>Lo sentimos, no encontramos resultados :(</p>
    <img alt="no-result" src="./no-result.jpg" width="250">
}
else {
    <div class="result-area @GetVisibility()">
            <ul class="results">
            @foreach (var item in result.Items()) {
                SetStart(0);
                <li @onclick="() => { ShowDocument(item.Title, item.Path); }">
                    <div class="item">
                        <div class="item-head">
                            <span class="title">@item.Title</span>
                            <span class="score">@item.Score</span>
                        </div>
                        <p class="snippet">... 
                            @for (int i = 0; i < item.Snippet.Length - 3; i++) {
                                @if (item.Snippet[i..(i + 3)] == "<b>") {
                                    @item.Snippet[lastStart..i]
                                    SetStart(i + 3);
                                }
                                @if (item.Snippet[i..(i + 4)] == "</b>") {
                                    <b>@item.Snippet[lastStart..i]</b>
                                    SetStart(i + 4);
                                }
                            }
                            @item.Snippet[lastStart..item.Snippet.Length]
                         ...</p>
                    </div>
                </li>
            <hr>
            }
            </ul>

        <div class="doc-content">
            <h2>@displayedTitle</h2>
            <p class="doc-text">@displayedContent</p>
        </div>
    </div>
}

@code {
    private int lastStart = 0;
    private string query = "";
    private string displayedTitle = "";

    private string displayedContent = "";
    private SearchResult result = new SearchResult();

    private void SetStart(int pos) {
        lastStart = pos;
    }

    private void RunQuery() {
        displayedTitle = "";
        displayedContent = "";
        result = Moogle.Query(query);
    }

    private void SearchSuggestion() {
        query = @result.Suggestion;
        RunQuery();
    }

    private string GetVisibility() {
        return (result.Count == 0 ? "invisible" : "flexb");
    }

    private void ShowDocument(string title, string path) {
        displayedTitle = title;

        StreamReader reader = new StreamReader(path);
        displayedContent = reader.ReadToEnd();
    }
}
